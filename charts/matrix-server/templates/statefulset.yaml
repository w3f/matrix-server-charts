apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.name }}
  labels:
    app: {{ .Release.name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.name }}
  replicas: 1
  revisionHistoryLimit: 3
  serviceName: {{ .Release.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-synapse.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: configmap-copy
        image: busybox
        command: ['/bin/sh', '-c', 'cp /etc/{{ .Release.name }}/files/* /etc/{{ .Release.name }}/']
        volumeMounts:
        - name: config-volume
          mountPath: /etc/matrix-server/files
        - name: config
          mountPath: /etc/matrix-server
      containers:
      - name: {{ .Release.name }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag }}
        imagePullPolicy: IfNotPresent
        env:
        - name: SYNAPSE_CONFIG_PATH
          value: /etc/{{ .Release.name }}/homeserver.yaml
        - name: UID
          value: "0"
        - name: GID
          value: "0"
        {{ if .Values.antiscam }}
        - name: PYTHONPATH
          value: "/etc/{{ .Release.name }}/"
        {{ end }}
        ports:
        - name: http
          containerPort: {{ .Values.port }}
        - name: metrics
          containerPort: 9000
        livenessProbe:
          httpGet:
            path: /_matrix/client/versions
            port: {{ .Values.port }}
          initialDelaySeconds: 50
          timeoutSeconds: 3
          periodSeconds: 10
        {{ if ne .Values.environment "ci" }}
        resources:
{{ toYaml .Values.resources | indent 10 }}            
        {{ end }}
        volumeMounts:
        - name: config-volume
          mountPath: /etc/{{ .Release.name }}/files
        - name: config
          mountPath: /etc/{{ .Release.name }}
        {{ if ne .Values.environment "ci" }}
        - name: data
          mountPath: /data
        {{ end }}
      volumes:
      - name: config
        emptyDir: {}
      - name: config-volume
        projected:
          sources:
          - configMap:
              name: {{ .Release.name }}-synapse
          - configMap:
              name: {{ .Release.name }}-log
          - secret:
              name: {{ .Release.name }}-signing-key
          {{ if .Values.antiscam }}
          - configMap:
              name: {{ .Release.name }}-antiscam
          - configMap:
              name: {{ .Release.name }}-antiscam-init
          {{ end }}
{{ if ne .Values.environment "ci" }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
{{ end }}
